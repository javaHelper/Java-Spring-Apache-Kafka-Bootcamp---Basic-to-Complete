{
	"info": {
		"_postman_id": "95e0fb24-ef09-4046-bbde-738fea6353d2",
		"name": "Course - Spring Kafka 4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Microservices & Kafka Stream",
			"item": [
				{
					"name": "Promotion",
					"item": [
						{
							"name": "Create Promotion",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"promotionCode\" : \"{{$randomWord}}{{$randomInt}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/promotion",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"promotion"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Discount",
					"item": [
						{
							"name": "Create Discount",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"randomDiscountPercentage\", _.random(1, 10) * 5)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"discountCode\": \"{{$randomColor}}{{$randomInt}}\",\n    \"discountPercentage\": {{randomDiscountPercentage}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/discount",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"discount"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Commodity Order",
					"item": [
						{
							"name": "Order 1 Random Item",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orderLocation\": \"{{$randomCountry}}\",\r\n  \"creditCardNumber\": \"{{$randomBankAccount}}{{$randomBankAccount}}\",\r\n  \"items\": [\r\n    {\r\n      \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n      \"price\": {{$randomInt}},\r\n      \"quantity\": {{$randomInt}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/order",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order 2 Random Items",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orderLocation\": \"{{$randomCountry}}\",\r\n  \"creditCardNumber\": \"{{$randomBankAccount}}{{$randomBankAccount}}\",\r\n  \"items\": [\r\n    {\r\n      \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n      \"price\": {{$randomInt}},\r\n      \"quantity\": {{$randomInt}}\r\n    },\r\n    {\r\n      \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n      \"price\": {{$randomInt}},\r\n      \"quantity\": {{$randomInt}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/order",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order 3 Random Items",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orderLocation\": \"{{$randomCountry}}\",\r\n  \"creditCardNumber\": \"{{$randomBankAccount}}{{$randomBankAccount}}\",\r\n  \"items\": [\r\n    {\r\n      \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n      \"price\": {{$randomInt}},\r\n      \"quantity\": {{$randomInt}}\r\n    },\r\n    {\r\n      \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n      \"price\": {{$randomInt}},\r\n      \"quantity\": {{$randomInt}}\r\n    },    \r\n    {\r\n      \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n      \"price\": {{$randomInt}},\r\n      \"quantity\": {{$randomInt}}\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/order",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Plastic & Non Plastic Order",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"orderLocation\": \"{{$randomCountry}}\",\n    \"creditCardNumber\": \"{{$randomBankAccount}}{{$randomBankAccount}}\",\n    \"items\": [\n        {\n            \"itemName\": \"Cotton Dog\",\n            \"price\": 80,\n            \"quantity\": 250\n        },\n        {\n            \"itemName\": \"Plastic Cat\",\n            \"price\": 400,\n            \"quantity\": 500\n        },\n        {\n            \"itemName\": \"Wooden Horse\",\n            \"price\": 700,\n            \"quantity\": 90\n        },\n        {\n            \"itemName\": \"Steel Pig\",\n            \"price\": 350,\n            \"quantity\": 270\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/order",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"order"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Feedback",
					"item": [
						{
							"name": "Simulation",
							"item": [
								{
									"name": "01 - Indonesia (4)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var pronouns = [\"he\", \"she\", \"they\"]",
													"var randomPronoun = pronouns[_.random(pronouns.length - 1)];",
													"",
													"var randomAdjectiveWords = [\"happy\", \"good\", \"helpful\", \"angry\", \"sad\", \"bad\", \"visionary\", \"strategic\", \"viral\", \"rich\", \"innovative\", \"efficient\", \"collaborative\", \"secure\"];",
													"var randomAdjectiveWord = randomAdjectiveWords[ _.random(randomAdjectiveWords.length - 1)];",
													"",
													"pm.environment.set(\"randomAdjectiveWord\", randomAdjectiveWord)",
													"pm.environment.set(\"randomPronoun\", randomPronoun)",
													"pm.environment.set(\"randomRating\", _.random(1, 5))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"location\" : \"Indonesia\",\n   \"rating\" : 4,\n   \"feedback\" : \"The {{$randomJobType}} at {{$randomDepartment}} department, {{randomPronoun}} makes me feel {{randomAdjectiveWord}} when I try to {{$randomIngverb}} {{$randomNoun}}.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/feedback",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Indonesia (5)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var pronouns = [\"he\", \"she\", \"they\"]",
													"var randomPronoun = pronouns[_.random(pronouns.length - 1)];",
													"",
													"var randomAdjectiveWords = [\"happy\", \"good\", \"helpful\", \"angry\", \"sad\", \"bad\", \"visionary\", \"strategic\", \"viral\", \"rich\", \"innovative\", \"efficient\", \"collaborative\", \"secure\"];",
													"var randomAdjectiveWord = randomAdjectiveWords[ _.random(randomAdjectiveWords.length - 1)];",
													"",
													"pm.environment.set(\"randomAdjectiveWord\", randomAdjectiveWord)",
													"pm.environment.set(\"randomPronoun\", randomPronoun)",
													"pm.environment.set(\"randomRating\", _.random(1, 5))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"location\" : \"Indonesia\",\n   \"rating\" : 5,\n   \"feedback\" : \"The {{$randomJobType}} at {{$randomDepartment}} department, {{randomPronoun}} makes me feel {{randomAdjectiveWord}} when I try to {{$randomIngverb}} {{$randomNoun}}.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/feedback",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Indonesia (3)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var pronouns = [\"he\", \"she\", \"they\"]",
													"var randomPronoun = pronouns[_.random(pronouns.length - 1)];",
													"",
													"var randomAdjectiveWords = [\"happy\", \"good\", \"helpful\", \"angry\", \"sad\", \"bad\", \"visionary\", \"strategic\", \"viral\", \"rich\", \"innovative\", \"efficient\", \"collaborative\", \"secure\"];",
													"var randomAdjectiveWord = randomAdjectiveWords[ _.random(randomAdjectiveWords.length - 1)];",
													"",
													"pm.environment.set(\"randomAdjectiveWord\", randomAdjectiveWord)",
													"pm.environment.set(\"randomPronoun\", randomPronoun)",
													"pm.environment.set(\"randomRating\", _.random(1, 5))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"location\" : \"Indonesia\",\n   \"rating\" : 3,\n   \"feedback\" : \"The {{$randomJobType}} at {{$randomDepartment}} department, {{randomPronoun}} makes me feel {{randomAdjectiveWord}} when I try to {{$randomIngverb}} {{$randomNoun}}.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/feedback",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Singapore (5)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var pronouns = [\"he\", \"she\", \"they\"]",
													"var randomPronoun = pronouns[_.random(pronouns.length - 1)];",
													"",
													"var randomAdjectiveWords = [\"happy\", \"good\", \"helpful\", \"angry\", \"sad\", \"bad\", \"visionary\", \"strategic\", \"viral\", \"rich\", \"innovative\", \"efficient\", \"collaborative\", \"secure\"];",
													"var randomAdjectiveWord = randomAdjectiveWords[ _.random(randomAdjectiveWords.length - 1)];",
													"",
													"pm.environment.set(\"randomAdjectiveWord\", randomAdjectiveWord)",
													"pm.environment.set(\"randomPronoun\", randomPronoun)",
													"pm.environment.set(\"randomRating\", _.random(1, 5))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"location\" : \"Singapore\",\n   \"rating\" : 5,\n   \"feedback\" : \"The {{$randomJobType}} at {{$randomDepartment}} department, {{randomPronoun}} makes me feel {{randomAdjectiveWord}} when I try to {{$randomIngverb}} {{$randomNoun}}.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/feedback",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Singapore (3)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var pronouns = [\"he\", \"she\", \"they\"]",
													"var randomPronoun = pronouns[_.random(pronouns.length - 1)];",
													"",
													"var randomAdjectiveWords = [\"happy\", \"good\", \"helpful\", \"angry\", \"sad\", \"bad\", \"visionary\", \"strategic\", \"viral\", \"rich\", \"innovative\", \"efficient\", \"collaborative\", \"secure\"];",
													"var randomAdjectiveWord = randomAdjectiveWords[ _.random(randomAdjectiveWords.length - 1)];",
													"",
													"pm.environment.set(\"randomAdjectiveWord\", randomAdjectiveWord)",
													"pm.environment.set(\"randomPronoun\", randomPronoun)",
													"pm.environment.set(\"randomRating\", _.random(1, 5))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"location\" : \"Singapore\",\n   \"rating\" : 3,\n   \"feedback\" : \"The {{$randomJobType}} at {{$randomDepartment}} department, {{randomPronoun}} makes me feel {{randomAdjectiveWord}} when I try to {{$randomIngverb}} {{$randomNoun}}.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/feedback",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"feedback"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Good Feedback",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"location\" : \"{{$randomCountry}}\",\n   \"rating\" : 5,\n   \"feedback\" : \"I'm very happy with the staff. Helpful and always smile. Please keep make me feels good.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/feedback",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"feedback"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Bad Feedback",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"location\" : \"{{$randomCountry}}\",\n   \"rating\" : 1,\n   \"feedback\" : \"The staff mocked me until I sad and make me angry! It's really bad experience!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/feedback",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"feedback"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Random Feedback",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var countries = [\"United Kingdom\", \"Thailand\", \"Norway\", \"Canada\", \"France\", \"China\", \"Brazil\"]",
											"var pronouns = [\"he\", \"she\", \"they\"]",
											"var randomPronoun = pronouns[_.random(pronouns.length - 1)];",
											"",
											"var randomAdjectiveWords = [\"happy\", \"good\", \"helpful\", \"angry\", \"sad\", \"bad\", \"visionary\", \"strategic\", \"viral\", \"rich\", \"innovative\", \"efficient\", \"collaborative\", \"secure\"];",
											"var randomAdjectiveWord = randomAdjectiveWords[ _.random(randomAdjectiveWords.length - 1)];",
											"",
											"pm.environment.set(\"randomCountry\", countries[_.random(countries.length - 1)])",
											"pm.environment.set(\"randomAdjectiveWord\", randomAdjectiveWord)",
											"pm.environment.set(\"randomPronoun\", randomPronoun)",
											"pm.environment.set(\"randomRating\", _.random(1, 5))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"location\" : \"{{randomCountry}}\",\n   \"rating\" : {{randomRating}},\n   \"feedback\" : \"The {{$randomJobType}} at {{$randomDepartment}} department, {{randomPronoun}} makes me feel {{randomAdjectiveWord}} when I try to {{$randomVerb}} {{$randomNoun}}.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/feedback",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"feedback"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customer Purchase",
					"item": [
						{
							"name": "Create Purchase Mobile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// list random valid data\r",
											"var arrOS = [\"Android\", \"iOS\"];\r",
											"var indexOS = Math.floor(Math.random() * arrOS.length);\r",
											"pm.variables.set(\"randomOperatingSystem\", arrOS[indexOS]);\r",
											"\r",
											"var arrSemVer = [\"4.0.0\", \"4.0.1\", \"4.0.2\", \"4.1.0\", \"4.1.1\"];\r",
											"var indexSemVer = Math.floor(Math.random() * arrSemVer.length);\r",
											"pm.variables.set(\"randomSemVer\", arrSemVer[indexSemVer]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseAmount\": {{$randomInt}},\n  \"mobileAppVersion\": \"{{randomSemVer}}\",\n  \"operatingSystem\": \"{{randomOperatingSystem}}\",\n  \"location\": {\n    \"latitude\": {{$randomLatitude}},\n    \"longitude\": {{$randomLongitude}}\n  }\n}"
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/customer/purchase/mobile",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"customer",
										"purchase",
										"mobile"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Purchase Web",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// list random valid data\r",
											"var arrOS = [\"macOS\", \"Windows\", \"Linux\"];\r",
											"var indexOS = Math.floor(Math.random() * arrOS.length);\r",
											"pm.variables.set(\"randomOperatingSystem\", arrOS[indexOS]);\r",
											"\r",
											"// list random valid data\r",
											"var arrBrowser = [\"Chrome\", \"Firefox\", \"Safari\", \"Edge\", \"Opera\", \"Other\"];\r",
											"var indexBrowser = Math.floor(Math.random() * arrBrowser.length);\r",
											"pm.variables.set(\"randomBrowser\", arrBrowser[indexBrowser]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseAmount\": {{$randomInt}},\n  \"browser\": \"{{randomBrowser}}\",\n  \"operatingSystem\": \"{{randomOperatingSystem}}\"\n}"
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/customer/purchase/web",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"customer",
										"purchase",
										"web"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customer Preference",
					"item": [
						{
							"name": "Simulation",
							"item": [
								{
									"name": "Eve - Shopping Cart 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"EVE\",\n  \"itemName\": \"Apple\",\n  \"cartAmount\": 2\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "Eve - Shopping Cart 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"EVE\",\n  \"itemName\": \"Banana\",\n  \"cartAmount\": 5\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "Adam - Wishlist 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"ADAM\",\n  \"itemName\": \"Tomato\"\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/wishlist",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"wishlist"
											]
										}
									},
									"response": []
								},
								{
									"name": "Eve - Wishlist 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"EVE\",\n  \"itemName\": \"Cherry\"\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/wishlist",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"wishlist"
											]
										}
									},
									"response": []
								},
								{
									"name": "Adam - Shopping Cart 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"ADAM\",\n  \"itemName\": \"Garlic\",\n  \"cartAmount\": 7\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "Eve - Shopping Cart 3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"EVE\",\n  \"itemName\": \"Apple\",\n  \"cartAmount\": 5\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Shopping Cart Item",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// list random valid data\r",
											"var customerId = \"CUSTOMER-\" + Math.ceil(Math.random() * 5)\r",
											"pm.variables.set(\"randomCustomerId\", customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"{{randomCustomerId}}\",\n  \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\n  \"cartAmount\": {{$randomInt}}\n}"
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"customer",
										"preference",
										"shopping-cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wishlist Item",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// list random valid data\r",
											"var customerId = \"CUSTOMER-\" + Math.ceil(Math.random() * 5)\r",
											"pm.variables.set(\"randomCustomerId\", customerId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"{{randomCustomerId}}\",\n  \"itemName\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\n}"
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/wishlist",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"customer",
										"preference",
										"wishlist"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Flash Sale",
					"item": [
						{
							"name": "Simulation",
							"item": [
								{
									"name": "01 - Anna (Cookies)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var items = [\"Book\", \"Candy\", \"Jacket\", \"Lamp\"]",
													"pm.environment.set(\"randomCustomerId\", \"Customer-\" + _.random(101,150))",
													"pm.environment.set(\"randomItem\", items[_.random(items.length - 1)])",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"customerId\" : \"Anna\",\n   \"itemName\" : \"Cookies\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/flashsale/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"flashsale",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Olaf (Cookies)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var items = [\"Book\", \"Candy\", \"Jacket\", \"Lamp\"]",
													"pm.environment.set(\"randomCustomerId\", \"Customer-\" + _.random(101,150))",
													"pm.environment.set(\"randomItem\", items[_.random(items.length - 1)])",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"customerId\" : \"Olaf\",\n   \"itemName\" : \"Cookies\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/flashsale/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"flashsale",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Olaf (Cake)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var items = [\"Book\", \"Candy\", \"Jacket\", \"Lamp\"]",
													"pm.environment.set(\"randomCustomerId\", \"Customer-\" + _.random(101,150))",
													"pm.environment.set(\"randomItem\", items[_.random(items.length - 1)])",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"customerId\" : \"Olaf\",\n   \"itemName\" : \"Cake\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/flashsale/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"flashsale",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Anna (Cake)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var items = [\"Book\", \"Candy\", \"Jacket\", \"Lamp\"]",
													"pm.environment.set(\"randomCustomerId\", \"Customer-\" + _.random(101,150))",
													"pm.environment.set(\"randomItem\", items[_.random(items.length - 1)])",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"customerId\" : \"Anna\",\n   \"itemName\" : \"Cake\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/flashsale/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"flashsale",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Elsa (Cookies)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var items = [\"Book\", \"Candy\", \"Jacket\", \"Lamp\"]",
													"pm.environment.set(\"randomCustomerId\", \"Customer-\" + _.random(101,150))",
													"pm.environment.set(\"randomItem\", items[_.random(items.length - 1)])",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"customerId\" : \"Elsa\",\n   \"itemName\" : \"Cookies\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/flashsale/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"flashsale",
												"vote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Random Flash Sale Vote",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var items = [\"Book\", \"Candy\", \"Jacket\", \"Lamp\"]",
											"pm.environment.set(\"randomCustomerId\", \"Customer-\" + _.random(101,150))",
											"pm.environment.set(\"randomItem\", items[_.random(items.length - 1)])",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"customerId\" : \"{{randomCustomerId}}\",\n   \"itemName\" : \"{{randomItem}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/flashsale/vote",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"flashsale",
										"vote"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Inventory",
					"item": [
						{
							"name": "Sum Record Simulation",
							"item": [
								{
									"name": "01 - Add candy (4)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Candy\",\r\n\t\"quantity\": 4,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Add apple (2)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Apple\",\r\n\t\"quantity\": 2,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Add candy (3)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Candy\",\r\n\t\"quantity\": 3,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Add candy (1)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Candy\",\r\n\t\"quantity\": 1,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Add apple (4)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Apple\",\r\n\t\"quantity\": 4,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Add apple (5)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Apple\",\r\n\t\"quantity\": 5,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Subtract Record Simulation",
							"item": [
								{
									"name": "01 - Add cereal (10)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Cereal\",\r\n\t\"quantity\": 10,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Subtract cereal (-3)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Cereal\",\r\n\t\"quantity\": 3,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Subtract cereal (-2)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Cereal\",\r\n\t\"quantity\": 2,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Using Reduce Simulation",
							"item": [
								{
									"name": "01 - Add cheese (5)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month = (\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Cheese\",\r\n\t\"quantity\": 5,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Add cheese (2)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month = (\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Cheese\",\r\n\t\"quantity\": 2,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Subtract cheese (-4)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
													"    var seed = new Date(Date.now());\r",
													"    seed.setDate(seed.getDate() - rangeOfDays)\r",
													"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
													"}\r",
													"\r",
													"var randomDate = transactionDateGenerator(1, 8, 12)\r",
													"var year = randomDate.getYear() + 1900;\r",
													"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
													"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
													"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
													"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
													"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
													"\r",
													"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
													"\r",
													"pm.environment.set(\"randomTransactionDate\", randomDateString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"Cheese\",\r\n\t\"quantity\": 4,\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Window Simulation",
							"item": [
								{
									"name": "Inventory Simulation 01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 50,\r\n\t\"transactionTime\" : \"2022-12-31T08:00:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 02",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 15,\r\n\t\"transactionTime\" : \"2022-12-31T08:10:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 03",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 8,\r\n\t\"transactionTime\" : \"2022-12-31T08:20:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 04",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 7,\r\n\t\"transactionTime\" : \"2022-12-31T08:30:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 05",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 12,\r\n\t\"transactionTime\" : \"2022-12-31T08:40:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 06",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 11,\r\n\t\"transactionTime\" : \"2022-12-31T08:50:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 07",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 9,\r\n\t\"transactionTime\" : \"2022-12-31T09:00:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 08",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 4,\r\n\t\"transactionTime\" : \"2022-12-31T09:10:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 09",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 6,\r\n\t\"transactionTime\" : \"2022-12-31T09:20:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 10",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 3,\r\n\t\"transactionTime\" : \"2022-12-31T09:30:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 11",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 10,\r\n\t\"transactionTime\" : \"2022-12-31T09:40:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 12",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 6,\r\n\t\"transactionTime\" : \"2022-12-31T09:50:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 13",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 3,\r\n\t\"transactionTime\" : \"2022-12-31T10:00:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 14",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 4,\r\n\t\"transactionTime\" : \"2022-12-31T10:10:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Simulation 15",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"location\" : \"Indonesia\",\r\n\t\"item\": \"{{inventorySimulationItem}}\",\r\n\t\"quantity\": 17,\r\n\t\"transactionTime\" : \"2022-12-31T10:20:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"inventory",
												"subtract"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Inventory - Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
											"    var seed = new Date(Date.now());\r",
											"    seed.setDate(seed.getDate() - rangeOfDays)\r",
											"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
											"}\r",
											"\r",
											"var randomDate = transactionDateGenerator(1, 8, 12)\r",
											"var year = randomDate.getYear() + 1900;\r",
											"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
											"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
											"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
											"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
											"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
											"\r",
											"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
											"\r",
											"pm.environment.set(\"randomTransactionDate\", randomDateString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n\t\"quantity\": {{$randomInt}},\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/inventory/add",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"inventory",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory - Subtract",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
											"    var seed = new Date(Date.now());\r",
											"    seed.setDate(seed.getDate() - rangeOfDays)\r",
											"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
											"}\r",
											"\r",
											"var randomDate = transactionDateGenerator(1, 8, 12)\r",
											"var year = randomDate.getYear() + 1900;\r",
											"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
											"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
											"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
											"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
											"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
											"\r",
											"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
											"\r",
											"pm.environment.set(\"randomTransactionDate\", randomDateString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"location\" : \"{{$randomCountry}}\",\r\n\t\"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\",\r\n\t\"quantity\": {{$randomInt}},\r\n\t\"transactionTime\" : \"{{randomTransactionDate}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/inventory/subtract",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"inventory",
										"subtract"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Online Order / Payment",
					"item": [
						{
							"name": "Inner Join Simulation",
							"item": [
								{
									"name": "Online Order A",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"A1\",\n\t\"orderDateTime\" : \"2022-12-25T06:05:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment X",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"X1\",\n\t\"paymentDateTime\" : \"2022-12-25T06:05:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order B",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"B1\",\n\t\"orderDateTime\" : \"2022-12-25T06:10:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment A",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"A1\",\n\t\"paymentDateTime\" : \"2022-12-25T06:15:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order C",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"C1\",\n\t\"orderDateTime\" : \"2022-12-25T06:25:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment B",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"B1\",\n\t\"paymentDateTime\" : \"2022-12-25T06:25:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment D",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"D1\",\n\t\"paymentDateTime\" : \"2022-12-25T06:35:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order D",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"D1\",\n\t\"orderDateTime\" : \"2022-12-25T06:40:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment F",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"F1\",\n\t\"paymentDateTime\" : \"2022-12-25T06:45:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order E",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"E1\",\n\t\"orderDateTime\" : \"2022-12-25T06:50:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment C",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"C1\",\n\t\"paymentDateTime\" : \"2022-12-25T06:50:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order F",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"F1\",\n\t\"orderDateTime\" : \"2022-12-25T08:00:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment E",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"E1\",\n\t\"paymentDateTime\" : \"2022-12-25T08:05:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Left Join Simulation",
							"item": [
								{
									"name": "Online Order A",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"A2\",\n\t\"orderDateTime\" : \"2022-12-25T06:05:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment X",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"X2\",\n\t\"paymentDateTime\" : \"2022-12-25T06:05:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order B",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"B2\",\n\t\"orderDateTime\" : \"2022-12-25T06:10:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment A",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"A2\",\n\t\"paymentDateTime\" : \"2022-12-25T06:15:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order C",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"C2\",\n\t\"orderDateTime\" : \"2022-12-25T06:25:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment B",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"B2\",\n\t\"paymentDateTime\" : \"2022-12-25T06:25:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment D",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"D2\",\n\t\"paymentDateTime\" : \"2022-12-25T06:35:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order D",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"D2\",\n\t\"orderDateTime\" : \"2022-12-25T06:40:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment F",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"F2\",\n\t\"paymentDateTime\" : \"2022-12-25T06:45:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order E",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"E2\",\n\t\"orderDateTime\" : \"2022-12-25T06:50:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment C",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"C2\",\n\t\"paymentDateTime\" : \"2022-12-25T06:50:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order F",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"F2\",\n\t\"orderDateTime\" : \"2022-12-25T08:00:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment E",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"E2\",\n\t\"paymentDateTime\" : \"2022-12-25T08:05:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Outer Join Simulation",
							"item": [
								{
									"name": "Online Order A",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"A3\",\n\t\"orderDateTime\" : \"2022-12-25T06:05:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment X",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"X3\",\n\t\"paymentDateTime\" : \"2022-12-25T06:05:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order B",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"B3\",\n\t\"orderDateTime\" : \"2022-12-25T06:10:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment A",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"A3\",\n\t\"paymentDateTime\" : \"2022-12-25T06:15:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order C",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"C3\",\n\t\"orderDateTime\" : \"2022-12-25T06:25:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment B",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"B3\",\n\t\"paymentDateTime\" : \"2022-12-25T06:25:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment D",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"D3\",\n\t\"paymentDateTime\" : \"2022-12-25T06:35:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order D",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"D3\",\n\t\"orderDateTime\" : \"2022-12-25T06:40:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment F",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"F3\",\n\t\"paymentDateTime\" : \"2022-12-25T06:45:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order E",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"E3\",\n\t\"orderDateTime\" : \"2022-12-25T06:50:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment C",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"C3\",\n\t\"paymentDateTime\" : \"2022-12-25T06:50:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Order F",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"F3\",\n\t\"orderDateTime\" : \"2022-12-25T08:00:00\",\n\t\"totalAmount\" : {{$randomInt}},\n\t\"username\" : \"{{$randomUserName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/order/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"order",
												"online"
											]
										}
									},
									"response": []
								},
								{
									"name": "Online Payment E",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
													"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"onlineOrderNumber\": \"E3\",\n\t\"paymentDateTime\" : \"2022-12-25T08:05:00\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"payment",
												"online"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Online Order",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
											"    var seed = new Date(Date.now());\r",
											"    seed.setDate(seed.getDate() - rangeOfDays)\r",
											"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
											"}\r",
											"\r",
											"var randomDate = transactionDateGenerator(1, 8, 12)\r",
											"var year = randomDate.getYear() + 1900;\r",
											"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
											"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
											"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
											"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
											"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
											"\r",
											"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
											"\r",
											"pm.environment.set(\"randomDate\", randomDateString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"onlineOrderNumber\": \"ORD-{{$randomInt}}\",\n    \"orderDateTime\": \"{{randomDate}}\",\n    \"totalAmount\": {{$randomInt}},\n    \"username\": \"{{$randomUserName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/order/online",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"order",
										"online"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Online Payment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var paymentMethods = [\"visa\", \"mastercard\", \"paypal\", \"bank-transfer\", \"gift-voucher\"]\r",
											"pm.environment.set(\"randomPaymentMethod\", paymentMethods[_.random(paymentMethods.length - 1)])\r",
											"\r",
											"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
											"    var seed = new Date(Date.now());\r",
											"    seed.setDate(seed.getDate() - rangeOfDays)\r",
											"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
											"}\r",
											"\r",
											"var randomDate = transactionDateGenerator(1, 8, 12)\r",
											"var year = randomDate.getYear() + 1900;\r",
											"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
											"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
											"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
											"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
											"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
											"\r",
											"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
											"\r",
											"pm.environment.set(\"randomDate\", randomDateString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"onlineOrderNumber\": \"ORD-{{$randomInt}}\",\n\t\"paymentDateTime\" : \"{{randomDate}}\",\n\t\"paymentMethod\" : \"{{randomPaymentMethod}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/payment/online",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"payment",
										"online"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Web Design Vote",
					"item": [
						{
							"name": "Inner Join Simulation",
							"item": [
								{
									"name": "Color Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-A\",\n\t\"color\": \"pink-A\",\n\t\"voteDateTime\": \"2022-12-25T08:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Eeyore 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"eeyore-A\",\n\t\"color\": \"yellow-A\",\n\t\"voteDateTime\": \"2022-12-25T08:25:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-A\",\n\t\"layout\": \"vertical-A\",\n\t\"voteDateTime\": \"2022-12-25T08:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-A\",\n\t\"color\": \"yellow-A\",\n\t\"voteDateTime\": \"2022-12-25T09:15:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-A\",\n\t\"layout\": \"vertical-A\",\n\t\"voteDateTime\": \"2022-12-25T09:30:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-A\",\n\t\"layout\": \"horizontal-A\",\n\t\"voteDateTime\": \"2022-12-25T09:50:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-A\",\n\t\"color\": \"pink-A\",\n\t\"voteDateTime\": \"2022-12-25T10:00:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-A\",\n\t\"layout\": \"vertical-A\",\n\t\"voteDateTime\": \"2022-12-25T10:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Rabbit 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"rabbit-A\",\n\t\"layout\": \"horizontal-A\",\n\t\"voteDateTime\": \"2022-12-25T10:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-A\",\n\t\"color\": \"yellow-A\",\n\t\"voteDateTime\": \"2022-12-25T11:20:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Left Join Simulation",
							"item": [
								{
									"name": "Color Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-B\",\n\t\"color\": \"pink-B\",\n\t\"voteDateTime\": \"2022-12-25T08:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Eeyore 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"eeyore-B\",\n\t\"color\": \"yellow-B\",\n\t\"voteDateTime\": \"2022-12-25T08:25:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-B\",\n\t\"layout\": \"vertical-B\",\n\t\"voteDateTime\": \"2022-12-25T08:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-B\",\n\t\"color\": \"yellow-B\",\n\t\"voteDateTime\": \"2022-12-25T09:15:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-B\",\n\t\"layout\": \"vertical-B\",\n\t\"voteDateTime\": \"2022-12-25T09:30:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-B\",\n\t\"layout\": \"horizontal-B\",\n\t\"voteDateTime\": \"2022-12-25T09:50:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-B\",\n\t\"color\": \"pink-B\",\n\t\"voteDateTime\": \"2022-12-25T10:00:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-B\",\n\t\"layout\": \"vertical-B\",\n\t\"voteDateTime\": \"2022-12-25T10:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Rabbit 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"rabbit-B\",\n\t\"layout\": \"horizontal-B\",\n\t\"voteDateTime\": \"2022-12-25T10:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-B\",\n\t\"color\": \"yellow-B\",\n\t\"voteDateTime\": \"2022-12-25T11:20:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Outer Join Simulation",
							"item": [
								{
									"name": "Color Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-C\",\n\t\"color\": \"pink-C\",\n\t\"voteDateTime\": \"2022-12-25T08:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Eeyore 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"eeyore-C\",\n\t\"color\": \"yellow-C\",\n\t\"voteDateTime\": \"2022-12-25T08:25:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-C\",\n\t\"layout\": \"vertical-C\",\n\t\"voteDateTime\": \"2022-12-25T08:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-C\",\n\t\"color\": \"yellow-C\",\n\t\"voteDateTime\": \"2022-12-25T09:15:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-C\",\n\t\"layout\": \"vertical-C\",\n\t\"voteDateTime\": \"2022-12-25T09:30:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-C\",\n\t\"layout\": \"horizontal-C\",\n\t\"voteDateTime\": \"2022-12-25T09:50:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-C\",\n\t\"color\": \"pink-C\",\n\t\"voteDateTime\": \"2022-12-25T10:00:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-C\",\n\t\"layout\": \"vertical-C\",\n\t\"voteDateTime\": \"2022-12-25T10:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Rabbit 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"rabbit-C\",\n\t\"layout\": \"horizontal-C\",\n\t\"voteDateTime\": \"2022-12-25T10:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-C\",\n\t\"color\": \"yellow-C\",\n\t\"voteDateTime\": \"2022-12-25T11:20:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Stream To Table",
							"item": [
								{
									"name": "Color Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-D\",\n\t\"color\": \"pink-D\",\n\t\"voteDateTime\": \"2022-12-25T08:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Eeyore 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"eeyore-D\",\n\t\"color\": \"yellow-D\",\n\t\"voteDateTime\": \"2022-12-25T08:25:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-D\",\n\t\"layout\": \"vertical-D\",\n\t\"voteDateTime\": \"2022-12-25T08:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-D\",\n\t\"color\": \"yellow-D\",\n\t\"voteDateTime\": \"2022-12-25T09:15:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-D\",\n\t\"layout\": \"vertical-D\",\n\t\"voteDateTime\": \"2022-12-25T09:30:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Piglet 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"piglet-D\",\n\t\"layout\": \"horizontal-D\",\n\t\"voteDateTime\": \"2022-12-25T09:50:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-D\",\n\t\"color\": \"pink-D\",\n\t\"voteDateTime\": \"2022-12-25T10:00:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Pooh 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"pooh-D\",\n\t\"layout\": \"vertical-D\",\n\t\"voteDateTime\": \"2022-12-25T10:05:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Layout Vote - Rabbit 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"rabbit-D\",\n\t\"layout\": \"horizontal-D\",\n\t\"voteDateTime\": \"2022-12-25T10:40:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"layout",
												"vote"
											]
										}
									},
									"response": []
								},
								{
									"name": "Color Vote - Tigger 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"tigger-D\",\n\t\"color\": \"yellow-D\",\n\t\"voteDateTime\": \"2022-12-25T11:20:00\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"web",
												"color",
												"vote"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Web Color Vote",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var colors = [\"red\", \"blue\", \"green\", \"yellow\", \"black\"]\r",
											"pm.environment.set(\"randomColor\", colors[_.random(colors.length - 1)])\r",
											"\r",
											"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
											"    var seed = new Date(Date.now());\r",
											"    seed.setDate(seed.getDate() - rangeOfDays)\r",
											"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
											"}\r",
											"\r",
											"var randomDate = transactionDateGenerator(1, 8, 12)\r",
											"var year = randomDate.getYear() + 1900;\r",
											"var month =(\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
											"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
											"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
											"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
											"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
											"\r",
											"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
											"\r",
											"pm.environment.set(\"randomDate\", randomDateString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"color\": \"{{randomColor}}\",\n    \"voteDateTime\": \"{{randomDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/web/color/vote",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"web",
										"color",
										"vote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Web Layout Vote",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var layouts = [\"horizontal\", \"vertical\"]\r",
											"pm.environment.set(\"randomLayout\", layouts[_.random(layouts.length - 1)])\r",
											"\r",
											"var transactionDateGenerator = function (rangeOfDays, startHour, hourRange) {\r",
											"    var seed = new Date(Date.now());\r",
											"    seed.setDate(seed.getDate() - rangeOfDays)\r",
											"    return new Date(seed.getYear() + 1900, seed.getMonth(), seed.getDate() + Math.random() * rangeOfDays, Math.random() * hourRange + startHour, Math.random() * 59, Math.random() * 59)\r",
											"}\r",
											"\r",
											"var randomDate = transactionDateGenerator(1, 8, 12)\r",
											"var year = randomDate.getYear() + 1900;\r",
											"var month = (\"0\" + (randomDate.getMonth() + 1)).slice(-2);\r",
											"var date = (\"0\" + randomDate.getDate()).slice(-2);\r",
											"var hour = (\"0\" + randomDate.getHours()).slice(-2)\r",
											"var minute = (\"0\" + randomDate.getMinutes()).slice(-2)\r",
											"var second = (\"0\" + randomDate.getSeconds()).slice(-2)\r",
											"\r",
											"var randomDateString = year + \"-\" + month + \"-\" + date + \"T\" + hour + \":\" + minute + \":\" + second\r",
											"\r",
											"pm.environment.set(\"randomDate\", randomDateString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"layout\": \"{{randomLayout}}\",\n    \"voteDateTime\": \"{{randomDate}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/web/layout/vote",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"web",
										"layout",
										"vote"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Premium Purchase & User",
					"item": [
						{
							"name": "Premium Offer - Inner Join Stream / Table",
							"item": [
								{
									"name": "01 - Bruce Level is Bronze",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"level\": \"Bronze\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Clark Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Bruce Purchase #21",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"purchaseNumber\": \"21\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Clark Purchase #31",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"purchaseNumber\": \"31\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Bruce Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Bruce Purchase #22",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"purchaseNumber\": \"22\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Alfred Purchase #11",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-X\",\r\n    \"purchaseNumber\": \"11\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Clark Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "09 - Clark Purchase #32",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"purchaseNumber\": \"32\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "10 - Bruce Purchase #23",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"purchaseNumber\": \"23\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "11 - Bruce Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "12 - Bruce Purchase #24",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-X\",\r\n    \"purchaseNumber\": \"24\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "13 - Clark Purchase #33",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"purchaseNumber\": \"33\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "14 - Alfred Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-X\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "15 - Clark Level is Diamond",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"level\": \"Diamond\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "16 - Clark Purchase #34",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-X\",\r\n    \"purchaseNumber\": \"34\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Premium Offer - Left Join Stream / Table",
							"item": [
								{
									"name": "01 - Bruce Level is Bronze",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"level\": \"Bronze\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Clark Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Bruce Purchase #21",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"purchaseNumber\": \"21\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Clark Purchase #31",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"purchaseNumber\": \"31\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Bruce Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Bruce Purchase #22",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"purchaseNumber\": \"22\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Alfred Purchase #11",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-Y\",\r\n    \"purchaseNumber\": \"11\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Clark Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "09 - Clark Purchase #32",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"purchaseNumber\": \"32\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "10 - Bruce Purchase #23",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"purchaseNumber\": \"23\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "11 - Bruce Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "12 - Bruce Purchase #24",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Y\",\r\n    \"purchaseNumber\": \"24\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "13 - Clark Purchase #33",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"purchaseNumber\": \"33\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "14 - Alfred Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-Y\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "15 - Clark Level is Diamond",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"level\": \"Diamond\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "16 - Clark Purchase #34",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Y\",\r\n    \"purchaseNumber\": \"34\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Premium Offer - Inner Join Stream / Global Table",
							"item": [
								{
									"name": "01 - Bruce Level is Bronze",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"level\": \"Bronze\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Clark Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Bruce Purchase #21",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"purchaseNumber\": \"21\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Clark Purchase #31",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"purchaseNumber\": \"31\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Bruce Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Bruce Purchase #22",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"purchaseNumber\": \"22\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Alfred Purchase #11",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-Global-X\",\r\n    \"purchaseNumber\": \"11\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Clark Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "09 - Clark Purchase #32",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"purchaseNumber\": \"32\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "10 - Bruce Purchase #23",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"purchaseNumber\": \"23\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "11 - Bruce Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "12 - Bruce Purchase #24",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-X\",\r\n    \"purchaseNumber\": \"24\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "13 - Clark Purchase #33",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"purchaseNumber\": \"33\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "14 - Alfred Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-Global-X\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "15 - Clark Level is Diamond",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"level\": \"Diamond\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "16 - Clark Purchase #34",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-X\",\r\n    \"purchaseNumber\": \"34\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Premium Offer - Inner Join Stream / Global Table Copy",
							"item": [
								{
									"name": "01 - Bruce Level is Bronze",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"level\": \"Bronze\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Clark Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Bruce Purchase #21",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"purchaseNumber\": \"21\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Clark Purchase #31",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"purchaseNumber\": \"31\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Bruce Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Bruce Purchase #22",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"purchaseNumber\": \"22\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Alfred Purchase #11",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-Global-XYZ\",\r\n    \"purchaseNumber\": \"11\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Clark Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "09 - Clark Purchase #32",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"purchaseNumber\": \"32\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "10 - Bruce Purchase #23",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"purchaseNumber\": \"23\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "11 - Bruce Level is Silver",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"level\": \"Silver\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "12 - Bruce Purchase #24",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Bruce-Global-XYZ\",\r\n    \"purchaseNumber\": \"24\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "13 - Clark Purchase #33",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"purchaseNumber\": \"33\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "14 - Alfred Level is Gold",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Alfred-Global-XYZ\",\r\n    \"level\": \"Gold\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "15 - Clark Level is Diamond",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"level\": \"Diamond\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "16 - Clark Purchase #34",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Clark-Global-XYZ\",\r\n    \"purchaseNumber\": \"34\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"premium",
												"purchase"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create User Purchase",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"purchaseNumber\": \"PUR-{{$randomInt}}\",\r\n    \"item\": \"{{$randomProductMaterial}} {{$randomProduct}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/premium/purchase",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"premium",
										"purchase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User Level",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var levels = [\"Bronze\", \"Silver\", \"Gold\", \"Diamond\"]\r",
											"pm.environment.set(\"randomLevel\", levels[_.random(levels.length - 1)])"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"level\": \"{{randomLevel}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/premium/user",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"premium",
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Subscription Offer",
					"item": [
						{
							"name": "Diana Case",
							"item": [
								{
									"name": "01 - Diana Subscribe Monthly",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"duration\": \"Monthly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Diana Subscription #41",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"subscriptionNumber\": \"41\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Diana Subscription #42",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"subscriptionNumber\": \"42\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Diana Subscription #43",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"subscriptionNumber\": \"43\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Diana Subscribe Yearly",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"duration\": \"Yearly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/user",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Diana Subscription #44",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"subscriptionNumber\": \"44\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"purchase"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Diana Subscription #45",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"Diana-E\",\r\n    \"subscriptionNumber\": \"45\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"subscription",
												"purchase"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Subscription Period",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var periods = [\"Monthly\", \"Yearly\"]\r",
											"pm.environment.set(\"randomPeriod\", periods[_.random(periods.length - 1)])"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"duration\": \"{{randomPeriod}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/subscription/user",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"subscription",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription Period Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var periods = [\"Monthly\", \"Yearly\"]\r",
											"pm.environment.set(\"randomPeriod\", periods[_.random(periods.length - 1)])"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"andi\",\r\n    \"duration\": \"{{randomPeriod}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/subscription/user",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"subscription",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Purchase Subscription",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"subscriptionNumber\": \"SUB-{{$randomInt}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"subscription",
										"purchase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Purchase Subscription Copy",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"andi\",\r\n    \"subscriptionNumber\": \"SUB-{{$randomInt}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaMsOrderUrl}}/api/subscription/purchase",
									"host": [
										"{{kafkaMsOrderUrl}}"
									],
									"path": [
										"api",
										"subscription",
										"purchase"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Kafka Connect",
			"item": [
				{
					"name": "Connectors",
					"item": [
						{
							"name": "List connector plugins",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kafkaConnectUrl}}/connector-plugins",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connector-plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "List connectors (name only)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific connector status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name/status",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name",
										"status"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "sink-person-address-postgresql-schema-registry"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific connector config info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name/config",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name",
										"config"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "source-spooldir-csv"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update specific connector",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"connector.class\": \"com.github.jcustenborder.kafka.connect.spooldir.SpoolDirCsvSourceConnector\",\r\n    \"tasks.max\": \"1\",\r\n    \"topic\": \"t-spooldir-csv-demo\",\r\n    \"input.file.pattern\": \"mycsv-.*.csv\",\r\n    \"input.path\": \"/data/inputs\",\r\n    \"error.path\": \"/data/errors\",\r\n    \"finished.path\": \"/data/processed\",\r\n    \"csv.first.row.as.header\": true,\r\n    \"schema.generation.enabled\": \"true\",\r\n    \"empty.poll.wait.ms\": 5000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name/config",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name",
										"config"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "source-spooldir-csv"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Restart specific connector",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name/restart",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name",
										"restart"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "sink-sftp-json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pause specific connector",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name/pause",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name",
										"pause"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "source-person-address-postgresql-schema-registry"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resume specific connector",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name/resume",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name",
										"resume"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "source-person-address-postgresql-schema-registry"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete specific connector",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors/:connector-name",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors",
										":connector-name"
									],
									"variable": [
										{
											"key": "connector-name",
											"value": "sink-person-address-postgresql-schema-registry"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Setup source connectors",
					"item": [
						{
							"name": "Spooldir - CSV",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"source-spooldir-csv\",\r\n    \"config\": {\r\n        \"connector.class\": \"com.github.jcustenborder.kafka.connect.spooldir.SpoolDirCsvSourceConnector\",\r\n        \"topic\": \"t-spooldir-csv-demo\",\r\n        \"input.file.pattern\": \"employee-.*.csv\",\r\n        \"input.path\": \"/data/inputs\",\r\n        \"error.path\": \"/data/errors\",\r\n        \"finished.path\": \"/data/processed\",\r\n        \"schema.generation.enabled\": true,\r\n        \"csv.first.row.as.header\": true,\r\n        \"empty.poll.wait.ms\": 10000\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "PostgreSQL CDC - Finance",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"source-cdc-finance\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.debezium.connector.postgresql.PostgresConnector\",\r\n        \"bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"database.hostname\": \"{{localhost-ip}}\",\r\n        \"database.port\": \"5432\",\r\n        \"database.user\": \"postgres\",\r\n        \"database.password\": \"postgres\",\r\n        \"database.dbname\": \"postgres\",\r\n        \"table.include.list\": \"public.fin_invoices\",\r\n        \"database.server.name\": \"t-cdc-finance\",\r\n        \"plugin.name\": \"pgoutput\",\r\n        \"tombstones.on.delete\": true,\r\n        \"time.precision.mode\": \"connect\",\r\n        \"slot.name\": \"debezium_finance\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "PostgreSQL CDC - Marketing",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"source-cdc-marketing\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.debezium.connector.postgresql.PostgresConnector\",\r\n        \"bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"database.hostname\": \"{{localhost-ip}}\",\r\n        \"database.port\": \"5432\",\r\n        \"database.user\": \"postgres\",\r\n        \"database.password\": \"postgres\",\r\n        \"database.dbname\": \"postgres\",\r\n        \"table.include.list\": \"public.mkt_sales, public.mkt_promotions\",\r\n        \"database.server.name\": \"t-cdc-marketing\",\r\n        \"plugin.name\": \"pgoutput\",\r\n        \"tombstones.on.delete\": false,\r\n        \"slot.name\": \"debezium_marketing\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "PostgreSQL - Person Address",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"source-person-address-postgresql\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSourceConnector\",\r\n        \"topic.prefix\": \"t-person-address-postgresql\",\r\n        \"connection.url\": \"jdbc:postgresql://{{localhost-ip}}:5432/postgres\",\r\n        \"connection.user\": \"postgres\",\r\n        \"connection.password\": \"postgres\",\r\n        \"mode\": \"bulk\",\r\n        \"poll.interval.ms\": 7200000,\r\n        \"query\": \"SELECT p.*, pa.address_id, pa.address, pa.city, pa.postal_code FROM people p JOIN people_addresses pa ON p.person_id = pa.person_id ORDER BY p.person_id\",\r\n        \"transforms\": \"createKey,extractInt\",\r\n        \"transforms.createKey.type\": \"org.apache.kafka.connect.transforms.ValueToKey\",\r\n        \"transforms.createKey.fields\": \"address_id\",\r\n        \"transforms.extractInt.type\": \"org.apache.kafka.connect.transforms.ExtractField$Key\",\r\n        \"transforms.extractInt.field\": \"address_id\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "HTTP - Person Address",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"source-person-address-http\",\r\n    \"config\": {\r\n        \"connector.class\": \"com.github.castorm.kafka.connect.http.HttpSourceConnector\",\r\n        \"kafka.topic\": \"t-person-address-http\",\r\n        \"http.timer.interval.millis\": 60000,\r\n        \"http.request.url\": \"https://my.api.mockaroo.com/spring_kafka_person_address\",\r\n        \"http.request.headers\": \"X-API-Key:acb892e0\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Setup sink connectors",
					"item": [
						{
							"name": "PostgreSQL from CSV",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"sink-postgresql-csv\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\r\n        \"topics\": \"t-spooldir-csv-demo\",\r\n        \"confluent.topic.bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"connection.url\": \"jdbc:postgresql://{{localhost-ip}}:5432/postgres\",\r\n        \"connection.user\": \"postgres\",\r\n        \"connection.password\": \"postgres\",\r\n        \"table.name.format\": \"kafka_employees\",\r\n        \"auto.create\": true,\r\n        \"auto.evolve\": true,\r\n        \"pk.mode\": \"record_value\",\r\n        \"pk.fields\": \"employee_id\",\r\n        \"insert.mode\": \"upsert\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "SFTP (as JSON output)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"sink-sftp-json\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.sftp.SftpSinkConnector\",\r\n        \"topics\": \"t-spooldir-csv-demo\",\r\n        \"confluent.topic.bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"format.class\": \"io.confluent.connect.sftp.sink.format.json.JsonFormat\",\r\n        \"storage.class\": \"io.confluent.connect.sftp.sink.storage.SftpSinkStorage\",\r\n        \"flush.size\": 1000,\r\n        \"rotate.interval.ms\": 10000,\r\n        \"sftp.host\": \"{{localhost-ip}}\",\r\n        \"sftp.port\": \"2222\",\r\n        \"sftp.username\": \"sftpuser\",\r\n        \"sftp.password\": \"sftppassword\",\r\n        \"sftp.working.dir\": \"/sink-output\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "PostgreSQL from finance (invoices)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"sink-postgresql-finance-invoices\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\r\n        \"topics\": \"t-cdc-finance.public.fin_invoices\",\r\n        \"confluent.topic.bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"connection.url\": \"jdbc:postgresql://{{localhost-ip}}:5432/postgres\",\r\n        \"connection.user\": \"postgres\",\r\n        \"connection.password\": \"postgres\",\r\n        \"table.name.format\": \"kafka_fin_invoices\",\r\n        \"auto.create\": false,\r\n        \"auto.evolve\": false,\r\n        \"insert.mode\": \"upsert\",\r\n        \"delete.enabled\": true,\r\n        \"pk.mode\": \"record_key\",\r\n        \"pk.fields\": \"invoice_id\",\r\n        \"transforms\": \"unwrap\",\r\n        \"transforms.unwrap.type\": \"io.debezium.transforms.ExtractNewRecordState\",\r\n        \"transforms.unwrap.drop.tombstones\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "PostgreSQL person address from target topic",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"sink-person-address-postgresql\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\r\n        \"topics\": \"t-person-address-postgresql\",\r\n        \"confluent.topic.bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"connection.url\": \"jdbc:postgresql://{{localhost-ip}}:5432/postgres\",\r\n        \"connection.user\": \"postgres\",\r\n        \"connection.password\": \"postgres\",\r\n        \"table.name.format\": \"kafka_person_address\",\r\n        \"auto.create\": true,\r\n        \"auto.evolve\": true,\r\n        \"insert.mode\": \"upsert\",\r\n        \"delete.enabled\": true,\r\n        \"pk.mode\": \"record_key\",\r\n        \"pk.fields\": \"address_id\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Elasticsearch 01 - setup privileges",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{elasticsearchPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{elasticsearchUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"indices\": [\r\n        {\r\n            \"names\": [\r\n                \"*\"\r\n            ],\r\n            \"privileges\": [\r\n                \"create_index\",\r\n                \"read\",\r\n                \"write\",\r\n                \"view_index_metadata\"\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{elasticsearchUrl}}/_security/role/es_sink_connector_role?pretty=",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										"_security",
										"role",
										"es_sink_connector_role"
									],
									"query": [
										{
											"key": "pretty",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Elasticsearch 02 - setup roles",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{elasticsearchPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{elasticsearchUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"elastisearch-password\",\r\n    \"roles\": [\r\n        \"es_sink_connector_role\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{elasticsearchUrl}}/_security/user/es_sink_connector_user?pretty=",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										"_security",
										"user",
										"es_sink_connector_user"
									],
									"query": [
										{
											"key": "pretty",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Elasticsearch 03 - create sink",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"sink-person-address-elasticsearch\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.elasticsearch.ElasticsearchSinkConnector\",\r\n        \"topics\": \"t-person-address-target\",\r\n        \"confluent.topic.bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"connection.url\": \"{{elasticsearchUrl}}\",\r\n        \"connection.username\": \"{{elasticsearchUsername}}\",\r\n        \"connection.password\": \"{{elasticsearchPassword}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Elasticsearch",
					"item": [
						{
							"name": "List ES indices",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{elasticsearchUrl}}/_cat/indices",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										"_cat",
										"indices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get index mapping (fields)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{elasticsearchUrl}}/:index",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										":index"
									],
									"variable": [
										{
											"key": "index",
											"value": "t-person-address-target"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get count documents in index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{elasticsearchUrl}}/:index/_count",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										":index",
										"_count"
									],
									"variable": [
										{
											"key": "index",
											"value": "t-person-address-target"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find all documents in index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{elasticsearchUrl}}/:index/_search",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										":index",
										"_search"
									],
									"variable": [
										{
											"key": "index",
											"value": "t-person-address-target"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find by person_id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"query\": {\r\n        \"match\": {\r\n            \"person_id\": {\r\n                \"query\": \"76599\"\r\n            }\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{elasticsearchUrl}}/:index/_search",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										":index",
										"_search"
									],
									"variable": [
										{
											"key": "index",
											"value": "t-person-address-target"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find by address_id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"query\": {\r\n        \"match\": {\r\n            \"address_id\": {\r\n                \"query\": \"3002\"\r\n            }\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{elasticsearchUrl}}/:index/_search",
									"host": [
										"{{elasticsearchUrl}}"
									],
									"path": [
										":index",
										"_search"
									],
									"variable": [
										{
											"key": "index",
											"value": "t-person-address-target"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "{{elasticsearchPassword}}",
								"type": "string"
							},
							{
								"key": "username",
								"value": "{{elasticsearchUsername}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Kafka Schema Registry",
			"item": [
				{
					"name": "Subject",
					"item": [
						{
							"name": "List subjects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check if subject already exists",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schema\": \"{\\\"type\\\": \\\"record\\\",\\\"name\\\": \\\"test\\\",\\\"fields\\\":[{\\\"name\\\": \\\"field1\\\",\\\"type\\\": \\\"string\\\"},{\\\"name\\\": \\\"field2\\\",\\\"type\\\":\\\"string\\\",\\\"default\\\":\\\"unknown\\\"},{\\\"name\\\": \\\"field3\\\",\\\"type\\\":\\\"int\\\",\\\"default\\\":888}]}\",\r\n    \"schemaType\": \"AVRO\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects/:subject",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects",
										":subject"
									],
									"variable": [
										{
											"key": "subject",
											"value": "{{subject}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new subject",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schema\": \"{\\\"type\\\": \\\"record\\\",\\\"name\\\": \\\"test\\\",\\\"fields\\\":[{\\\"name\\\": \\\"field1\\\",\\\"type\\\": \\\"string\\\"},{\\\"name\\\": \\\"field2\\\",\\\"type\\\":\\\"string\\\",\\\"default\\\":\\\"unknown\\\"},{\\\"name\\\": \\\"field3\\\",\\\"type\\\":\\\"int\\\",\\\"default\\\":888},{\\\"name\\\": \\\"field4\\\",\\\"type\\\":\\\"int\\\",\\\"default\\\":888},{\\\"name\\\": \\\"field5\\\",\\\"type\\\":\\\"int\\\",\\\"default\\\":888}]}\",\r\n    \"schemaType\": \"AVRO\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects/:subject/versions",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions"
									],
									"variable": [
										{
											"key": "subject",
											"value": "{{subject}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete subject",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects/:subject",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects",
										":subject"
									],
									"variable": [
										{
											"key": "subject",
											"value": "{{subject}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subject versions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects/:subject/versions",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions"
									],
									"variable": [
										{
											"key": "subject",
											"value": "{{subject}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subject by version",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects/:subject/versions/:versionId",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions",
										":versionId"
									],
									"variable": [
										{
											"key": "subject",
											"value": "{{subject}}"
										},
										{
											"key": "versionId",
											"value": "{{subjectVersionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subject's schema by version",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/subjects/:subject/versions/:versionId/schema",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions",
										":versionId",
										"schema"
									],
									"variable": [
										{
											"key": "subject",
											"value": "{{subject}}"
										},
										{
											"key": "versionId",
											"value": "{{subjectVersionId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schema",
					"item": [
						{
							"name": "List schemas",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/schemas",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"schemas"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get schema info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/schemas/ids/:schemaId",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"schemas",
										"ids",
										":schemaId"
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get schema versions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/schemas/ids/:schemaId/versions",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"schemas",
										"ids",
										":schemaId",
										"versions"
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "{{schemaId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Compatibility",
					"item": [
						{
							"name": "Get schema compatibility",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{schemaRegistryUrl}}/config/:schemaName",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"config",
										":schemaName"
									],
									"variable": [
										{
											"key": "schemaName",
											"value": "sc-employee-backward-value"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update schema compatibility",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.schemaregistry.v1+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"compatibilityLevel\": \"BACKWARD\"\r\n}"
								},
								"url": {
									"raw": "{{schemaRegistryUrl}}/config/:schemaName",
									"host": [
										"{{schemaRegistryUrl}}"
									],
									"path": [
										"config",
										":schemaName"
									],
									"variable": [
										{
											"key": "schemaName",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Kafka Connect",
					"item": [
						{
							"name": "Source PostgreSQL - Person Address",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"source-person-address-postgresql-schema-registry\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSourceConnector\",\r\n        \"topic.prefix\": \"sc-person-address-postgresql\",\r\n        \"connection.url\": \"jdbc:postgresql://{{localhost-ip}}:5432/postgres\",\r\n        \"connection.user\": \"postgres\",\r\n        \"connection.password\": \"postgres\",\r\n        \"mode\": \"bulk\",\r\n        \"poll.interval.ms\": 10000,\r\n        \"query\": \"SELECT p.*, pa.address_id, pa.address, pa.city, pa.postal_code FROM people p JOIN people_addresses pa ON p.person_id = pa.person_id ORDER BY p.person_id\",\r\n        \"transforms\": \"createKey,extractInt,SetSchemaMetadata\",\r\n        \"transforms.createKey.type\": \"org.apache.kafka.connect.transforms.ValueToKey\",\r\n        \"transforms.createKey.fields\": \"address_id\",\r\n        \"transforms.extractInt.type\": \"org.apache.kafka.connect.transforms.ExtractField$Key\",\r\n        \"transforms.extractInt.field\": \"address_id\",\r\n        \"transforms.SetSchemaMetadata.type\": \"org.apache.kafka.connect.transforms.SetSchemaMetadata$Value\",\r\n        \"transforms.SetSchemaMetadata.schema.name\": \"com.course.avro.data.PersonAddressPostgresql\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sink PostgreSQL - Employee Forward",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"sink-person-address-postgresql-schema-registry\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\r\n        \"topics\": \"sc-employee-forward\",\r\n        \"confluent.topic.bootstrap.servers\": \"{{localhost-ip}}:9092\",\r\n        \"connection.url\": \"jdbc:postgresql://{{localhost-ip}}:5432/postgres\",\r\n        \"connection.user\": \"postgres\",\r\n        \"connection.password\": \"postgres\",\r\n        \"table.name.format\": \"kafka_employee_forward\",\r\n        \"auto.create\": false,\r\n        \"auto.evolve\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaConnectUrl}}/connectors",
									"host": [
										"{{kafkaConnectUrl}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Kafka Rest Proxy",
			"item": [
				{
					"name": "v2",
					"item": [
						{
							"name": "Producer",
							"item": [
								{
									"name": "Produce binary",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.kafka.binary.v2+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"records\": [\r\n        {\r\n            \"key\": \"anVzdC1hLXNhbXBsZQ==\",\r\n            \"value\": \"SnVzdCBzb21lIHZhbHVlIGZvciBrYWZrYQ==\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/topics/:topicName",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"topics",
												":topicName"
											],
											"variable": [
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}-binary"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Produce json",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.kafka.json.v2+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"records\": [\r\n        {\r\n            \"key\": \"this record has key\",\r\n            \"value\": {\r\n                \"name\": \"Steve Rogers\",\r\n                \"gender\": \"MALE\"\r\n            }\r\n        },\r\n        {\r\n            \"value\": [\r\n                {\r\n                    \"name\": \"Anna\",\r\n                    \"gender\": \"FEMALE\"\r\n                },\r\n                {\r\n                    \"name\": \"Olaf\",\r\n                    \"gender\": \"MALE\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"key\":\"this is another record key\", \r\n            \"value\": [\r\n                109,\r\n                289,\r\n                442\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/topics/:topicName",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"topics",
												":topicName"
											],
											"variable": [
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}-json"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Produce avro 1",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.kafka.avro.v2+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"value_schema\": \"{\\\"type\\\":\\\"record\\\", \\\"name\\\":\\\"MySchema\\\", \\\"fields\\\":[{\\\"name\\\":\\\"field1\\\", \\\"type\\\":\\\"string\\\"}]}\",\r\n    \"records\": [\r\n        {\r\n            \"value\": {\r\n                \"field1\": \"A sample\"\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/topics/:topicName",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"topics",
												":topicName"
											],
											"variable": [
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}-avro"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Produce avro 2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.kafka.avro.v2+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"value_schema_id\": 1,\r\n    \"records\": [\r\n        {\r\n            \"value\": {\r\n                \"field1\": \"this is another value for field1\"\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/topics/:topicName",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"topics",
												":topicName"
											],
											"variable": [
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}-avro"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Consumer",
							"item": [
								{
									"name": "Consume binary",
									"item": [
										{
											"name": "Create consumer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/vnd.kafka.binary.v2+json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{consumerName}}-binary\",\r\n    \"format\": \"binary\",\r\n    \"auto.offset.reset\": \"earliest\",\r\n    \"auto.commit.enable\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe to topic",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/vnd.kafka.binary.v2+json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"topics\": [\r\n        \"{{kafkaTopicName}}-binary\"\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/subscription",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId",
														"instances",
														":consumerName",
														"subscription"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														},
														{
															"key": "consumerName",
															"value": "{{consumerName}}-binary"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Consume from topic",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.kafka.binary.v2+json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/records",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId",
														"instances",
														":consumerName",
														"records"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														},
														{
															"key": "consumerName",
															"value": "{{consumerName}}-binary"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Consume json",
									"item": [
										{
											"name": "Create consumer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/vnd.kafka.json.v2+json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{consumerName}}-json\",\r\n    \"format\": \"json\",\r\n    \"auto.offset.reset\": \"earliest\",\r\n    \"auto.commit.enable\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe to topic",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/vnd.kafka.json.v2+json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"topics\": [\r\n        \"{{kafkaTopicName}}-json\"\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/subscription",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId",
														"instances",
														":consumerName",
														"subscription"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														},
														{
															"key": "consumerName",
															"value": "{{consumerName}}-json"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Consume from topic",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.kafka.json.v2+json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/records",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId",
														"instances",
														":consumerName",
														"records"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														},
														{
															"key": "consumerName",
															"value": "{{consumerName}}-json"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Consume avro",
									"item": [
										{
											"name": "Create consumer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/vnd.kafka.avro.v2+json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{consumerName}}-avro\",\r\n    \"format\": \"avro\",\r\n    \"auto.offset.reset\": \"earliest\",\r\n    \"auto.commit.enable\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe to topic",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/vnd.kafka.avro.v2+json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"topics\": [\r\n        \"{{kafkaTopicName}}-avro\"\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/subscription",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId",
														"instances",
														":consumerName",
														"subscription"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														},
														{
															"key": "consumerName",
															"value": "{{consumerName}}-avro"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Consume from topic",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.kafka.avro.v2+json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/records",
													"host": [
														"{{restProxyUrl}}"
													],
													"path": [
														"consumers",
														":consumerGroupId",
														"instances",
														":consumerName",
														"records"
													],
													"variable": [
														{
															"key": "consumerGroupId",
															"value": "{{consumerGroupId}}"
														},
														{
															"key": "consumerName",
															"value": "{{consumerName}}-avro"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get subscription",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.kafka.v2+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"topics\": [\r\n        \"{{kafkaTopicName}}\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/subscription",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"consumers",
												":consumerGroupId",
												"instances",
												":consumerName",
												"subscription"
											],
											"variable": [
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												},
												{
													"key": "consumerName",
													"value": "{{consumerName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Unsubscribe from topic",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.kafka.v2+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"topics\": [\r\n        \"{{kafkaTopicName}}\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName/subscription",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"consumers",
												":consumerGroupId",
												"instances",
												":consumerName",
												"subscription"
											],
											"variable": [
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												},
												{
													"key": "consumerName",
													"value": "{{consumerName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete consumer",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/consumers/:consumerGroupId/instances/:consumerName",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"consumers",
												":consumerGroupId",
												"instances",
												":consumerName"
											],
											"variable": [
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												},
												{
													"key": "consumerName",
													"value": "{{consumerName}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "v3",
					"item": [
						{
							"name": "Cluster",
							"item": [
								{
									"name": "List clusters",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get cluster info",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get cluster config",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/broker-config",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"broker-config"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Broker",
							"item": [
								{
									"name": "List brokers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/brokers",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"brokers"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get broker info",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/brokers/:brokerId",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"brokers",
												":brokerId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "brokerId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get broker replicas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/brokers/:brokerId/partition-replicas",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"brokers",
												":brokerId",
												"partition-replicas"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "brokerId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Topic",
							"item": [
								{
									"name": "List topics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/topics",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"topics"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create topic",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"topic_name\": \"{{kafkaTopicName}}\",\r\n    \"partitions_count\": 1,\r\n    \"replication_factor\": 1,\r\n    \"configs\": [\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/topics",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"topics"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get topic info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"topic_name\": \"topic-one\",\r\n    \"partitions_count\": 3,\r\n    \"replication_factor\": 1,\r\n    \"configs\": [\r\n        {\r\n            \"name\": \"cleanup.policy\",\r\n            \"value\": \"compact\"\r\n        },\r\n        {\r\n            \"name\": \"compression.type\",\r\n            \"value\": \"gzip\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/topics/:topicName",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"topics",
												":topicName"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get topic partitions info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"topic_name\": \"topic-one\",\r\n    \"partitions_count\": 3,\r\n    \"replication_factor\": 1,\r\n    \"configs\": [\r\n        {\r\n            \"name\": \"cleanup.policy\",\r\n            \"value\": \"compact\"\r\n        },\r\n        {\r\n            \"name\": \"compression.type\",\r\n            \"value\": \"gzip\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/topics/:topicName/partitions",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"topics",
												":topicName",
												"partitions"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Consumer",
							"item": [
								{
									"name": "List consumer groups",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/consumer-groups",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"consumer-groups"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get consumer group info",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/consumer-groups/:consumerGroupId",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"consumer-groups",
												":consumerGroupId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List consumers in group",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/consumer-groups/:consumerGroupId/consumers",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"consumer-groups",
												":consumerGroupId",
												"consumers"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get consumer info",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/consumer-groups/:consumerGroupId/consumers/:consumerId",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"consumer-groups",
												":consumerGroupId",
												"consumers",
												":consumerId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												},
												{
													"key": "consumerId",
													"value": "{{consumerName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List consumer assignments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/consumer-groups/:consumerGroupId/consumers/:consumerId/assignments",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"consumer-groups",
												":consumerGroupId",
												"consumers",
												":consumerId",
												"assignments"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												},
												{
													"key": "consumerId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get consumer assignment info",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/consumer-groups/:consumerGroupId/consumers/:consumerId/assignments/:topicName/partitions/:partitionId",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"consumer-groups",
												":consumerGroupId",
												"consumers",
												":consumerId",
												"assignments",
												":topicName",
												"partitions",
												":partitionId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												},
												{
													"key": "consumerGroupId",
													"value": "{{consumerGroupId}}"
												},
												{
													"key": "consumerId",
													"value": "1"
												},
												{
													"key": "topicName",
													"value": "{{kafkaTopicName}}"
												},
												{
													"key": "partitionId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Kafka ksqlDB",
			"item": [
				{
					"name": "Basic Data",
					"item": [
						{
							"name": "Basic Data 1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myBoolean\": {{$randomBoolean}},\n  \"myString\": \"{{$randomCatchPhrase}}\",\n  \"myAnotherString\": \"{{$randomCatchPhrase}}\",\n  \"myInteger\": {{$randomInt}},\n  \"myLong\": \"{{$randomInt}}{{$randomInt}}\",\n  \"myFloat\": \"{{$randomInt}}.{{$randomInt}}\",\n  \"myDouble\": \"{{$randomInt}}{{$randomInt}}.{{$randomInt}}{{$randomInt}}\",\n  \"myBigDecimal\": \"{{$randomInt}}{{$randomInt}}{{$randomInt}}{{$randomInt}}.{{$randomInt}}{{$randomInt}}{{$randomInt}}{{$randomInt}}{{$randomInt}}{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/one",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"one"
									]
								}
							},
							"response": []
						},
						{
							"name": "Basic Data 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"myDate_Year\", _.random(2020, 2030));\r",
											"pm.environment.set(\"myDate_Month\", _.random(1, 12));\r",
											"pm.environment.set(\"myDate_Date\", _.random(1, 28));\r",
											"\r",
											"pm.environment.set(\"myTime_Hour\", _.random(0, 23));\r",
											"pm.environment.set(\"myTime_Minute\", _.random(0, 59));\r",
											"pm.environment.set(\"myTime_Second\", _.random(0, 59));\r",
											"\r",
											"pm.environment.set(\"myTimestamp_Year\", _.random(2020, 2030));\r",
											"pm.environment.set(\"myTimestamp_Month\", _.random(1, 12));\r",
											"pm.environment.set(\"myTimestamp_Date\", _.random(1, 28));\r",
											"pm.environment.set(\"myTimestamp_Hour\", _.random(0, 23));\r",
											"pm.environment.set(\"myTimestamp_Minute\", _.random(0, 59));\r",
											"pm.environment.set(\"myTimestamp_Second\", _.random(0, 59));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myDate\": {\n    \"year\": {{myDate_Year}},\n    \"month\": {{myDate_Month}},\n    \"date\": {{myDate_Date}}\n  },\n  \"myTime\": {\n    \"hour\": {{myTime_Hour}},\n    \"minute\": {{myTime_Minute}},\n    \"second\": {{myTime_Second}}\n  },\n  \"myTimestamp\": {\n    \"year\": {{myTimestamp_Year}},\n    \"month\": {{myTimestamp_Month}},\n    \"date\": {{myTimestamp_Date}},\n    \"hour\": {{myTimestamp_Hour}},\n    \"minute\": {{myTimestamp_Minute}},\n    \"second\": {{myTimestamp_Second}}\n  }\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/two",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"two"
									]
								}
							},
							"response": []
						},
						{
							"name": "Basic Data 3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"myDate_Year\", _.random(2020, 2030));\r",
											"pm.environment.set(\"myDate_Month\", _.random(1, 12));\r",
											"pm.environment.set(\"myDate_Date\", _.random(1, 28));\r",
											"\r",
											"pm.environment.set(\"myTime_Hour\", _.random(0, 23));\r",
											"pm.environment.set(\"myTime_Minute\", _.random(0, 59));\r",
											"pm.environment.set(\"myTime_Second\", _.random(0, 59));\r",
											"\r",
											"pm.environment.set(\"myDateTime_Year\", _.random(2020, 2030));\r",
											"pm.environment.set(\"myDateTime_Month\", _.random(1, 12));\r",
											"pm.environment.set(\"myDateTime_Date\", _.random(1, 28));\r",
											"pm.environment.set(\"myDateTime_Hour\", _.random(0, 23));\r",
											"pm.environment.set(\"myDateTime_Minute\", _.random(0, 59));\r",
											"pm.environment.set(\"myDateTime_Second\", _.random(0, 59));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"myDate\": {\n    \"year\": {{myDate_Year}},\n    \"month\": {{myDate_Month}},\n    \"date\": {{myDate_Date}}\n  },\n  \"myTime\": {\n    \"hour\": {{myTime_Hour}},\n    \"minute\": {{myTime_Minute}},\n    \"second\": {{myTime_Second}}\n  },\n  \"myDateTime\": {\n    \"year\": {{myDateTime_Year}},\n    \"month\": {{myDateTime_Month}},\n    \"date\": {{myDateTime_Date}},\n    \"hour\": {{myDateTime_Hour}},\n    \"minute\": {{myDateTime_Minute}},\n    \"second\": {{myDateTime_Second}}\n  }\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/three",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"three"
									]
								}
							},
							"response": []
						},
						{
							"name": "Basic Data 4",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"arrayElementsCount\", _.random(2, 10));\r",
											"pm.environment.set(\"listElementsCount\", _.random(2, 10));\r",
											"pm.environment.set(\"setElementsCount\", _.random(2, 10));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"arrayElementsCount\": {{arrayElementsCount}},\n  \"listElementsCount\": {{listElementsCount}},\n  \"setElementsCount\": {{setElementsCount}}\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/four",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"four"
									]
								}
							},
							"response": []
						},
						{
							"name": "Basic Data 5",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"alphaElementsCount\", _.random(2, 10));\r",
											"pm.environment.set(\"betaElementsCount\", _.random(2, 10));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alphaElementsCount\": {{alphaElementsCount}},\n  \"betaElementsCount\": {{betaElementsCount}}\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/five",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"five"
									]
								}
							},
							"response": []
						},
						{
							"name": "Basic Data Person",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"yearOfBirth\", _.random(1980, 2000));\r",
											"pm.environment.set(\"monthOfBirth\", _.random(10, 12));\r",
											"pm.environment.set(\"dateOfBirth\", _.random(10, 28));\r",
											"\r",
											"pm.environment.set(\"yearPassportExpiry\", _.random(2024, 2028));\r",
											"pm.environment.set(\"monthPassportExpiry\", _.random(10, 12));\r",
											"pm.environment.set(\"datePassportExpiry\", _.random(10, 28));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"birthDate\": \"{{yearOfBirth}}-{{monthOfBirth}}-{{dateOfBirth}}\",\n    \"contacts\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phoneWork\": \"{{$randomPhoneNumber}}\",\n        \"phoneHome\": \"{{$randomPhoneNumber}}\"\n    },\n    \"passport\": {\n        \"number\": \"{{$randomBankAccount}}\",\n        \"expiryDate\": \"{{yearPassportExpiry}}-{{monthPassportExpiry}}-{{datePassportExpiry}}\"\n    },\n    \"addresses\": [\n        {\n            \"streetAddress\": \"{{$randomStreetAddress}}\",\n            \"country\": \"{{$randomCountry}}\",\n            \"location\": {\n                \"latitude\": {{$randomLatitude}},\n                \"longitude\": {{$randomLongitude}}\n            }\n        },\n        {\n            \"streetAddress\": \"{{$randomStreetAddress}}\",\n            \"country\": \"{{$randomCountry}}\",\n            \"location\": {\n                \"latitude\": {{$randomLatitude}},\n                \"longitude\": {{$randomLongitude}}\n            }\n        },\n        {\n            \"streetAddress\": \"{{$randomStreetAddress}}\",\n            \"country\": \"{{$randomCountry}}\",\n            \"location\": {\n                \"latitude\": {{$randomLatitude}},\n                \"longitude\": {{$randomLongitude}}\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/person",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"person"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Stream & Table Key",
					"item": [
						{
							"name": "Table Simulation",
							"item": [
								{
									"name": "01 - Indonesia 1",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Indonesia\",\n  \"currencyCode\": \"IDR\",\n  \"population\": 100\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Indonesia 2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Indonesia\",\n  \"currencyCode\": \"IDR\",\n  \"population\": 300\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Indonesia 3",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Indonesia\",\n  \"currencyCode\": \"IDR\",\n  \"population\": 50\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Japan 1",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Japan\",\n  \"currencyCode\": \"JPY\",\n  \"population\": 60\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Japan 2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Japan\",\n  \"currencyCode\": \"JPY\",\n  \"population\": 80\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Japan 3",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Japan\",\n  \"currencyCode\": \"JPY\",\n  \"population\": 50\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Null key (no country name)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"population\": 120\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Indonesia 4",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Indonesia\",\n  \"currencyCode\": \"IDR\",\n  \"population\": 70\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								},
								{
									"name": "09 - Japan Delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country/Japan",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country",
												"Japan"
											]
										}
									},
									"response": []
								},
								{
									"name": "10 - Japan 4",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "*/*"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"countryName\": \"Japan\",\n  \"currencyCode\": \"JPY\",\n  \"population\": 100\n}"
										},
										"url": {
											"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
											"host": [
												"{{kafkaKsqldbSampleUrl}}"
											],
											"path": [
												"api",
												"basic-data",
												"country"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Basic Data Country",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"countryName\": \"{{$randomCountry}}\",\n  \"currencyCode\": \"{{$randomCurrencyCode}}\",\n  \"population\": {{$randomInt}}\n}"
								},
								"url": {
									"raw": "{{kafkaKsqldbSampleUrl}}/api/basic-data/country",
									"host": [
										"{{kafkaKsqldbSampleUrl}}"
									],
									"path": [
										"api",
										"basic-data",
										"country"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Feedback",
					"item": [
						{
							"name": "Are We Good Enough?",
							"item": [
								{
									"name": "01 - Drop if exists A",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"DROP STREAM IF EXISTS `s-commodity-feedback-one-good`;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Drop if exists B",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"DROP STREAM IF EXISTS `s-commodity-feedback-word`;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Drop if exists C",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"DROP STREAM IF EXISTS `s-commodity-feedback`;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Create base stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback` (`feedback` VARCHAR, `feedbackDateTime` VARCHAR, `location` VARCHAR, `rating` INT) WITH (KAFKA_TOPIC = 't-commodity-feedback', VALUE_FORMAT = 'JSON');\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Describe base stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"DESCRIBE `s-commodity-feedback`;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Create distinct word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-word` AS SELECT EXPLODE( ARRAY_DISTINCT( REGEXP_SPLIT_TO_ARRAY( LCASE( REGEXP_REPLACE(`feedback`, '[^a-zA-Z ]', '')), '\\\\s+'))) AS `word`, `feedbackDateTime`, `location`, `rating` FROM `s-commodity-feedback` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Push query word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"SELECT * FROM `s-commodity-feedback-word` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Create good word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-one-good` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('happy', 'good', 'helpful') EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "09 - Push query good word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"SELECT * FROM `s-commodity-feedback-one-good` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Who Owns This Feedback?",
							"item": [
								{
									"name": "01 - Create stream with key",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-two-good` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('happy', 'good', 'helpful') PARTITION BY `location` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Print stream with key",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"PRINT `s-commodity-feedback-two-good`;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Good Feedback or Bad Feedback?",
							"item": [
								{
									"name": "01 - Create bad word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-three-bad` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('angry', 'sad', 'bad') PARTITION BY `location` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Print bad word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"PRINT `s-commodity-feedback-three-bad`;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Group Using Table",
							"item": [
								{
									"name": "01 - Create good word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-four-good` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('happy', 'good', 'helpful') EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Create good word count table",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE TABLE `tbl-commodity-feedback-four-good-count` AS SELECT `location`, COUNT(`word`) AS `countGoodWord` FROM `s-commodity-feedback-four-good` GROUP BY `location` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Push query good word count",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"SELECT * FROM `tbl-commodity-feedback-four-good-count` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Create bad word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-four-bad` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('angry', 'sad', 'bad') EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Create bad word count table",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE TABLE `tbl-commodity-feedback-four-bad-count` AS SELECT `location`, COUNT(`word`) AS `countBadWord` FROM `s-commodity-feedback-four-bad` GROUP BY `location` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Push query bad word count",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"SELECT * FROM `tbl-commodity-feedback-four-bad-count` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Overall Good or Bad Word",
							"item": [
								{
									"name": "01 - Create good word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-six-good` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('happy', 'good', 'helpful') EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Create good word count table",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE TABLE `tbl-commodity-feedback-six-good-count-word` AS SELECT `word`, COUNT(`word`) AS `countGoodWord` FROM `s-commodity-feedback-six-good` GROUP BY `word` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Push query good word count",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"SELECT * FROM `tbl-commodity-feedback-six-good-count-word` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Create bad word stream",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE STREAM `s-commodity-feedback-six-bad` AS SELECT * FROM `s-commodity-feedback-word` WHERE `word` IN ('angry', 'sad', 'bad') EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Create bad word count table",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"CREATE OR REPLACE TABLE `tbl-commodity-feedback-six-bad-count-word` AS SELECT `word`, COUNT(`word`) AS `countBadWord` FROM `s-commodity-feedback-six-bad` GROUP BY `word` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/ksql",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"ksql"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Push query bad word count",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ksql\": \"SELECT * FROM `tbl-commodity-feedback-six-bad-count-word` EMIT CHANGES;\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{kafkaKsqldbUrl}}/query",
											"host": [
												"{{kafkaKsqldbUrl}}"
											],
											"path": [
												"query"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Customer Preference",
					"item": [
						{
							"name": "Cart & Wishlist Simulation",
							"item": [
								{
									"name": "01 - Linda - Shopping Cart (Cheese)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Cheese\",\n  \"cartAmount\": {{$randomInt}}\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "02 - Linda - Shopping Cart (Cheese)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Cheese\",\n  \"cartAmount\": {{$randomInt}}\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "03 - Linda - Shopping Cart (Egg)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Egg\",\n  \"cartAmount\": {{$randomInt}}\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "04 - Linda - Shopping Cart (Cheese)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Cheese\",\n  \"cartAmount\": {{$randomInt}}\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "05 - Linda - Shopping Cart (Egg)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Egg\",\n  \"cartAmount\": {{$randomInt}}\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/shopping-cart",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"shopping-cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "06 - Linda Wishlist Item (Beef)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Beef\"\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/wishlist",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"wishlist"
											]
										}
									},
									"response": []
								},
								{
									"name": "07 - Linda Wishlist Item (Orange)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Beef\"\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/wishlist",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"wishlist"
											]
										}
									},
									"response": []
								},
								{
									"name": "08 - Linda Wishlist Item (Beef)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "text/plain"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"Linda\",\n  \"itemName\": \"Orange\"\n}"
										},
										"url": {
											"raw": "{{kafkaMsOrderUrl}}/api/customer/preference/wishlist",
											"host": [
												"{{kafkaMsOrderUrl}}"
											],
											"path": [
												"api",
												"customer",
												"preference",
												"wishlist"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Pull Query",
					"item": [
						{
							"name": "Pull query to stream 1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ksql\": \"SELECT `myBoolean`, `myDouble`, `myString` FROM `s-basic-data-one`;\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaKsqldbUrl}}/query",
									"host": [
										"{{kafkaKsqldbUrl}}"
									],
									"path": [
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pull query to stream 2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ksql\": \"SELECT * FROM `s-basic-data-person`;\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaKsqldbUrl}}/query",
									"host": [
										"{{kafkaKsqldbUrl}}"
									],
									"path": [
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pull query to table",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ksql\": \"SELECT * FROM `tbl-commodity-customer-preference-all` WHERE `customerId` = 'Linda';\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaKsqldbUrl}}/query",
									"host": [
										"{{kafkaKsqldbUrl}}"
									],
									"path": [
										"query"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schema Registry",
					"item": [
						{
							"name": "Avro01",
							"item": [
								{
									"name": "Create topic sc-avro01",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"topic_name\": \"sc-avro01\",\r\n    \"partitions_count\": 1,\r\n    \"replication_factor\": 1,\r\n    \"configs\": [\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{restProxyUrl}}/v3/clusters/:clusterId/topics",
											"host": [
												"{{restProxyUrl}}"
											],
											"path": [
												"v3",
												"clusters",
												":clusterId",
												"topics"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "{{kafkaClusterId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create subject avro01",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Avro01\\\",\\\"namespace\\\":\\\"com.course.avro.data\\\",\\\"doc\\\":\\\"Sampledefaultvalue\\\",\\\"fields\\\":[{\\\"name\\\":\\\"fullName\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"}},{\\\"name\\\":\\\"maritalStatus\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"},\\\"default\\\":\\\"UNKNOWN\\\"},{\\\"name\\\":\\\"active\\\",\\\"type\\\":\\\"boolean\\\",\\\"default\\\":false}]}\",\r\n    \"schemaType\": \"AVRO\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{schemaRegistryUrl}}/subjects/:subject/versions",
											"host": [
												"{{schemaRegistryUrl}}"
											],
											"path": [
												"subjects",
												":subject",
												"versions"
											],
											"variable": [
												{
													"key": "subject",
													"value": "sc-avro01-value"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Writing Avro Schema",
							"item": [
								{
									"name": "List subjects",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{schemaRegistryUrl}}/subjects",
											"host": [
												"{{schemaRegistryUrl}}"
											],
											"path": [
												"subjects"
											]
										}
									},
									"response": []
								},
								{
									"name": "List schemas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{schemaRegistryUrl}}/schemas",
											"host": [
												"{{schemaRegistryUrl}}"
											],
											"path": [
												"schemas"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Java Client",
					"item": [
						{
							"name": "Insert dummy data",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ksql\": \"INSERT INTO `s-java-client` (`fieldOne`, `fieldTwo`, `fieldThree`) VALUES ('{{$randomWords}}', {{$randomInt}}, {{$randomBoolean}});\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kafkaKsqldbUrl}}/ksql",
									"host": [
										"{{kafkaKsqldbUrl}}"
									],
									"path": [
										"ksql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Server Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{kafkaKsqldbUrl}}/info",
							"host": [
								"{{kafkaKsqldbUrl}}"
							],
							"path": [
								"info"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "inventorySimulationItem",
			"value": "Apple"
		},
		{
			"key": "identifier",
			"value": "1"
		},
		{
			"key": "kafkaClusterId",
			"value": "mIRohjYKTnGCHTd6J5K0-Q",
			"type": "string"
		},
		{
			"key": "kafkaTopicName",
			"value": "my-topic-from-api",
			"type": "string"
		},
		{
			"key": "kafkaMsOrderUrl",
			"value": "http://localhost:9001",
			"type": "string"
		},
		{
			"key": "kafkaConnectUrl",
			"value": "http://localhost:8083",
			"type": "string"
		},
		{
			"key": "kafkaConnectSchemalessUrl",
			"value": "http://localhost:18083",
			"type": "string"
		},
		{
			"key": "schemaRegistryUrl",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "restProxyUrl",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "kafkaKsqldbUrl",
			"value": "http://localhost:8088",
			"type": "string"
		},
		{
			"key": "kafkaKsqldbSampleUrl",
			"value": "http://localhost:9002",
			"type": "string"
		},
		{
			"key": "schemaId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "subject",
			"value": "my-topic-from-api-value",
			"type": "string"
		},
		{
			"key": "subjectVersionId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "consumerGroupId",
			"value": "myConsumerGroupFromApi",
			"type": "string"
		},
		{
			"key": "consumerName",
			"value": "avroConsumerFromApi",
			"type": "string"
		},
		{
			"key": "localhost-ip",
			"value": "192.168.0.8",
			"type": "string"
		},
		{
			"key": "elasticsearchUrl",
			"value": "https://localhost:9200",
			"type": "string"
		},
		{
			"key": "elasticsearchUsername",
			"value": "elastic",
			"type": "string"
		},
		{
			"key": "elasticsearchPassword",
			"value": "ImZgm4qITBiwqd8Dks8ay7pV",
			"type": "string"
		}
	]
}